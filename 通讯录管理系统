#include<iostream>
#include<string.h>
#define MAX 20
using namespace std;
void showMenu();
void addPerson( struct AddressBook *homebook);  
void printPerson(struct AddressBook* homebook);
int checkPerson(struct AddressBook* homebook,string name);
void deleatPerson(struct AddressBook* homebook);
void findPerson(struct AddressBook* homebook);
void changePerson(struct AddressBook* homebook);
void clearPerson(struct AddressBook* homebook);
struct person
{
	string m_name;
	int m_sex;  // 1是男，2是女
	int m_age;
	string m_phone;
	string m_address;
};
struct AddressBook
{
	person personBook[MAX];
	int m_size;  //记录当前联系人个数
};

int main()
{
	struct AddressBook homebook;
	homebook.m_size = 0;
	int Select;
	while (1)
	{
		showMenu();
		cin >> Select;
		switch (Select)
		{
		case 1:  //添加联系人
			addPerson(&homebook);
			break;
		case 2:  //显示联系人
			printPerson(&homebook);
			break;
		case 3:  //删除联系人
			deleatPerson(&homebook);
			break; 
		case 4:  //查找联系人
			findPerson(&homebook);
			break;
		case 5:  //修改联系人
			changePerson(&homebook);
			break;
		case 6:	 //清空联系人
			clearPerson(&homebook);
			break;
		case 0:  //退出通讯录
			cout << "欢迎下次使用." << endl;
			system("pause");
			return 0;
			break;
		default:
			break;
		}
	}
}
void showMenu()
{
	cout << "**************************" << endl;
	cout << "*****  1.添加联系人  *****" << endl;
	cout << "*****  2.显示联系人  *****" << endl;
	cout << "*****  3.删除联系人  *****" << endl;
	cout << "*****  4.查找联系人  *****" << endl;
	cout << "*****  5.修改联系人  *****" << endl;
	cout << "*****  6.清空联系人  *****" << endl;
	cout << "*****  0.退出通讯录  *****" << endl;
	cout << "**************************" << endl;
}
void addPerson( struct AddressBook* homebook)
{
	if (homebook->m_size == MAX)
	{
		cout << "此通讯录已满" << endl;
		return;
	}
	else
	{
		string name;
		cout << "请输入姓名：" << endl;
		cin >> name;
		homebook->personBook[homebook->m_size].m_name = name;

		int sex = 0;
		cout << "请输入性别： 1是男，2是女" << endl;
		while (1)
		{
			cin >> sex;
			if (sex == 1 || sex == 2)
			{
				homebook->personBook[homebook->m_size].m_sex = sex;
				break;
			}
			else
			{
				cout << "输入错误，请重新输入" << endl;
			}
		}
		int age = 0;
		cout << "请输入年龄：" << endl;
		cin >> age;
		homebook->personBook[homebook->m_size].m_age = age;
		string phone;
		cout << "请输入电话号码:" << endl;
		cin >> phone;
		homebook->personBook[homebook->m_size].m_phone = phone;

		string address;
		cout << "请输入住址：" << endl;
		cin >> address;
		homebook->personBook[homebook->m_size].m_address = address;

		cout << "添加成功!" << endl;
		homebook->m_size++;
		system("pause");
		system("cls");
	}
}
void printPerson(struct AddressBook* homebook)
{
	int i = 0;
	if (homebook->m_size == 0)
	{
		cout << "此通讯录为空" << endl;
	}
	else
	{
		for (i = 0; i < homebook->m_size; i++)
		{
			cout << "姓名:  " << homebook->personBook[i].m_name << "\t";
			cout << "性别： " << (homebook->personBook[i].m_sex==1?"男":"女" )<< "\t";
			cout << "年龄： " << homebook->personBook[i].m_age << "\t";
			cout << "电话号码： " << homebook->personBook[i].m_phone << "\t";
			cout << "家庭住址： " << homebook->personBook[i].m_address << endl;
		}
	}
	system("pause");
	system("cls");
	return;
}
int checkPerson(struct AddressBook* homebook, string name)
{
	int i=0;
	for (i = 0; i < homebook->m_size; i++)
	{
		if (homebook->personBook[i].m_name == name)
			return i;
	}
	return -1;
	
}
void deleatPerson(struct AddressBook* homebook)
{
	string name;
	cout << "请输入要删除人的姓名" << endl;
	cin >> name;
	int exist;
	int i;
	exist = checkPerson(homebook, name);
	if (exist == -1)
		cout << "查无此人" << endl;
	else
	{
		for (i = exist; i < homebook->m_size; i++)
			homebook->personBook[i] = homebook->personBook[i + 1];

		homebook->m_size--;
		cout << "删除成功" << endl;
		system("pause");
		system("cls");
	}
}
void findPerson(struct AddressBook* homebook)
{
	string name;
	int exist;
	cout << "请输入查找联系人的姓名：" << endl;
	cin >> name;
	exist = checkPerson(homebook, name);
	if (exist == -1)
		cout << "查无此人" << endl;
	else
	{
		cout << "姓名:  " << homebook->personBook[exist].m_name << "\t";
		cout << "性别： " << (homebook->personBook[exist].m_sex == 1 ? "男" : "女") << "\t";
		cout << "年龄： " << homebook->personBook[exist].m_age << "\t";
		cout << "电话号码： " << homebook->personBook[exist].m_phone << "\t";
		cout << "家庭住址： " << homebook->personBook[exist].m_address << endl;
	}
	system("pause");
	system("cls");
}
void changePerson(struct AddressBook* homebook)
{
	string name;
	cout << "请输入你要修改的联系人的姓名" << endl;
	cin >> name;
	int exist;
	exist = checkPerson(homebook, name);
	if (exist == -1)
		cout << "查无此人" << endl;
	else
	{
		cout << "请输入修改后的姓名：" << endl;
		cin >> name;
		homebook->personBook[exist].m_name = name;

		int sex = 0;
		cout << "请输入修改后的性别： 1是男，2是女" << endl;
		while (1)
		{
			cin >> sex;
			if (sex == 1 || sex == 2)
			{
				homebook->personBook[exist].m_sex = sex;
				break;
			}
			else
			{
				cout << "输入错误，请重新输入" << endl;
			}
		}
		int age = 0;
		cout << "请输入修改后的年龄：" << endl;
		cin >> age;
		homebook->personBook[exist].m_age = age;
		string phone;
		cout << "请输入修改后的电话号码:" << endl;
		cin >> phone;
		homebook->personBook[exist].m_phone = phone;

		string address;
		cout << "请输入修改后的住址：" << endl;
		cin >> address;
		homebook->personBook[exist].m_address = address;

		cout << "修改成功!" << endl;
		system("pause");
		system("cls");
	}
}
void clearPerson(struct AddressBook* homebook)
{
	int choice;
	cout << "确定要执行清空功能？" << endl;
	cout << "1   放弃清空  ，2   确定清空" << endl;
	cin >> choice;
	if (choice == 2)
	{
		homebook->m_size = 0;
		cout << "通讯录已清空" << endl;
		system("pause");
		system("cls");
	}
	else
	{
		system("pause");
		system("cls");
	}
}
